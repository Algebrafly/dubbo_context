#server.port=${SERVER_PORT:8002}
#是否设定web应用，none-非web，servlet-web应用
spring.main.web-application-type=none

## dubbo
spring.dubbo.application.id=dubbo-Test
spring.dubbo.application.name=dubbo-Test
spring.dubbo.provider.filter=providerDubboLogFilter
spring.dubbo.consumer.filter=consumerDubboLogFilter
spring.dubbo.registry.address=zookeeper://${ZOOKEEPER_SERVER:127.0.0.1}:2181
spring.dubbo.server=true
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.port=20882
spring.dubbo.consumer.check=false
spring.dubbo.reference.check=false

#kafka-consumer
spring.cloud.stream.instance-count=1
spring.cloud.stream.instance-index=0

spring.cloud.stream.kafka.binder.brokers=192.168.6.63:9092
spring.cloud.stream.kafka.binder.zk-nodes=192.168.6.63:2181
spring.cloud.stream.kafka.binder.min-partition-count=1
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.auto-add-partitions=true
spring.cloud.stream.kafka.binder.health-timeout=120
spring.cloud.stream.kafka.binder.required-acks=1

spring.cloud.stream.bindings.log_output.destination=log-service-topic
spring.cloud.stream.bindings.log_output.content-type=text/plain
spring.cloud.stream.bindings.log_output.producer.partition-count=1

#spring.cloud.stream.bindings.log_input.destination=log-service-topic
#spring.cloud.stream.bindings.log_input.group=group_log
#spring.cloud.stream.bindings.log_input.consumer.concurrency=1
#spring.cloud.stream.bindings.log_input.consumer.partitioned=false